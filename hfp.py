# -*- coding: utf-8 -*-
"""HFP.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1rn3rPfgNobECxc1PIHr-uxIaEReoWYdG
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

df=pd.read_csv("/content/heart_failure_clinical_records_dataset.csv")
df.head(100)

print(df.describe())
print(df.shape)

# Create a pair plot of all numerical variables
sns.pairplot(df)

# Adjust plot layout (optional)
plt.subplots_adjust(top=0.9)  # Adjust top margin for better title placement

# Display the plots
plt.show()

print(df.columns)
x=df.iloc[:,0:12]
y=df.DEATH_EVENT
print(x.columns)

from sklearn.model_selection import train_test_split
X_train,X_test,y_train,y_test=train_test_split(x,y,train_size=0.9,random_state=42)
X_test.describe()

from sklearn.linear_model import LogisticRegression
from sklearn.metrics import accuracy_score
Lmodel=LogisticRegression()
Lmodel.fit(X_train,y_train)
predictions=Lmodel.predict(X_test)
# Evaluate model accuracy
accuracy = accuracy_score(y_test, predictions)
print(Lmodel.score(X_test,y_test))
print("Logistics:", accuracy)
input_samples=X_train.sample(1)
Lmodel.predict(input_samples)

from sklearn.neighbors import KNeighborsClassifier
knn_model = KNeighborsClassifier(n_neighbors=5)
knn_model.fit(X_train, y_train)

# Make predictions on test set
predictions = knn_model.predict(X_test)

# Evaluate model accuracy
accuracy = accuracy_score(y_test, predictions)
print("KNN Model Accuracy:", accuracy)

from sklearn.svm import SVC
# Define and train the SVM model with a linear kernel
svm_model = SVC(kernel='linear')
svm_model.fit(X_train, y_train)
# Make predictions on test set
predictions = svm_model.predict(X_test)
# Evaluate model accuracy
accuracy = accuracy_score(y_test, predictions)
print("SVM Model Accuracy:", accuracy)

from sklearn.tree import DecisionTreeClassifier

D_model=DecisionTreeClassifier()
D_model.fit(X_train,y_train)
predictions=D_model.predict(X_test)
accuracy=accuracy_score(y_test,predictions)
print(accuracy)

import pickle
pickle_out = open("heart_failure_model.pkl", "wb")
pickle.dump(Lmodel, pickle_out)
pickle_out.close()